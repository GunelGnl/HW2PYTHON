# Task10 На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом. 
# Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были повернуты вверх одной и той же стороной.
# Выведите минимальное количество монет, которые нужно перевернуть

# G_count = coins.count('G')
# R_count = coins.count('R')
    
#     return min(G_count, R_count)


# coins = ['G', 'R', 'G', 'G', 'R', 'R', 'G']
# min_flips = min_coin_flips(coins)
# print("Минимальное количество переворотов:", min_flips)

# Task 12: Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. 
# Петя помогает Кате по математике. Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. 
# Для этого Петя делает две подсказки. Он называет сумму этих чисел S и их произведение P. Помогите Кате отгадать задуманные Петей числа.

# def find_numbers(S, P):
#     for x in range(1, S + 1):
#         y = S - x
#         if x * y == P:
#             return x, y
#     return None

# S = 15
# P = 56
# numbers = find_numbers(S, P)
# if numbers is not None:
#     x, y = numbers
#     print("Первое число:", x)
#     print("Второе число:", y)
# else:
#     print("Числа не найдены")

# Task 14: Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.

# def print_powers_of_two(N):
#     power = 1
#     while power <= N:
#         print(power)
#         power *= 2

# N = 100
# print("Целые степени двойки, не превосходящие", N)
# print_powers_of_two(N)
